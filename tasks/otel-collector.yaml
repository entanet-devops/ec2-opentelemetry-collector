- name: Print all vars
  debug:
    var: vars

- name: Set monitoring endpoint based on project_environment variable
  set_fact:
    monitoring_endpoint: "{{ lookup('aws_ssm', '/devops/' + project_environment + '/monitoring_endpoint', region=(aws_region | default('eu-west-2')), aws_access_key=aws_access_key, aws_secret_key=aws_secret_key) }}"

- name: Print all vars
  debug:
    var: vars

- name: Ensure otel group exists
  ansible.builtin.group:
    name: "{{ otel_group }}"
    state: present

- name: Create otel user for running the OpenTelemetry Collector
  ansible.builtin.user:
    name: "{{ otel_user }}"
    state: present
    shell: /usr/sbin/nologin
    createhome: no
    system: yes
    groups: www-data, adm, {{ otel_group }}

- name: Ensure otelcol log directory exists
  ansible.builtin.file:
    path: /var/log/otelcol
    state: directory
    owner: otel
    group: otel
    mode: '0755'

- name: Download OpenTelemetry deb
  get_url:
    url: "{{ otel_url }}"
    dest: "/tmp/{{ otel_url | basename }}"
    mode: '0755'

- name: Install OpenTel package
  ansible.builtin.apt:
    deb: "/tmp/{{ otel_url | basename }}"

- name: Remove Otel installation files
  ansible.builtin.file:
    path: "/tmp/{{ otel_url | basename }}"
    state: absent

- name: Configure systemd configuration
  template:
    src: otelcol-contrib.service.j2
    dest: "{{ otel_service_path }}"
    mode: 0644

- name: Copy the OpenTel configuration file
  ansible.builtin.template:
    src: opentel-config.yaml.j2
    dest: /etc/{{ otel_service_name }}/opentel.yaml
    owner: otel
    group: otel
    mode: '0644'

- name: Restart service to pick up config
  ansible.builtin.systemd:
    enabled: true
    state: restarted
    daemon_reload: yes
    name: otelcol-contrib.service